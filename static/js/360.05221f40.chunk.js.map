{"version":3,"file":"static/js/360.05221f40.chunk.js","mappings":"mUAaO,MAAMA,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,+HAU9BC,GAAcC,EAAAA,EAAAA,IAAO,CACzBC,OAAOC,EAAAA,EAAAA,MAASC,IAAI,EAAG,qBAAqBF,MAAM,oBAClDG,UAAUF,EAAAA,EAAAA,MACLC,IAAI,EAAG,wBACPA,IAAI,EAAG,2CACPE,IAAI,GAAI,4CACbC,aAAaC,EAAAA,EAAAA,KAAQ,GAAMC,aAmJ7B,QA7IA,WACE,MAAMC,GAAQC,EAAAA,EAAAA,KAQRC,GAAUC,EAAAA,EAAAA,IAAgB,CAC9BC,UAAUC,EAAAA,EAAAA,GAAYf,GACtBgB,cAR4B,CAC5Bd,MAAO,GACPG,SAAU,MAaZ,OACEY,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,SAAS,KAAKC,GAAI,CAAEC,UAAW,UAAUC,UAClDL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACHC,QAAS,CAAEC,GAAI,EAAGC,GAAI,IACtBC,eAAe,SACfC,WAAW,SACXC,WAAS,EAAAP,UAETL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACO,MAAI,EAACJ,GAAI,GAAIK,GAAI,EAAGC,GAAG,OAAMV,UACjCL,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,IAAKrB,EAAOU,UACvBY,EAAAA,EAAAA,MAACX,EAAAA,GAAI,CACDM,WAAS,EACTT,GAAI,CACFe,UAAW,CAAEC,GAAI,gBACjBC,GAAI,OACJC,GAAI,OACJC,gBAAiB7B,EAAM8B,QAAQC,WAAWC,OAC1CpB,SAAA,EAEJL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACDO,MAAI,EACJD,WAAS,EACTF,eAAe,SACfgB,WAAY,EACZvB,GAAI,CACFD,SAAU,CAAEiB,GAAI,SAChBQ,aAAc,QACdtB,UAEJL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CACDO,MAAI,EACJL,GAAI,GACJW,GAAI,EAAEd,UAERY,EAAAA,EAAAA,MAACW,EAAAA,EAAG,CACAC,QAAQ,OACRC,cAAc,SACdC,UAAU,OACVC,YAAU,EACVC,aAAa,MACbC,SAAUvC,EAAQwC,cA3CUC,IAC9CC,QAAQC,IAAIF,EAAO,IA0C+C/B,SAAA,EAElDL,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,QAAQ,KACRT,UAAU,KACV5B,GAAI,CAAEC,UAAW,SAAUqC,GAAI,UAAWpC,SAC7C,2BAGCL,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CACNC,UAAQ,EACRC,KAAK,QACLC,KAAK,QACLC,MAAM,QACNN,QAAQ,SACRrC,GAAI,CAACsC,GAAI,WAEbzC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CACNI,MAAM,WACNF,KAAK,WACLJ,QAAQ,YAGdxC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAgB,CACbC,SACEhD,EAAAA,EAAAA,KAACiD,EAAAA,EAAQ,CACLC,KAAK,QACL,aAAW,6BACXP,UAAQ,KACJhD,EAAQwD,SAAS,iBAG3BL,OACE9C,EAAAA,EAAAA,KAACuC,EAAAA,EAAU,CACPC,QAAQ,QACRrC,GAAI,CACFiD,SAAU,SACVC,WAAY,IACZC,MAAO,WACPjD,SACL,yBAMPL,EAAAA,EAAAA,KAACuD,EAAAA,EAAa,CACVC,SAAS,EACTZ,KAAK,SACLJ,QAAQ,YACRrC,GAAI,CACFiB,GAAI,SACJqC,GAAI,EACJC,MAAO,MACP/B,aAAc,QAEhBgC,KAAM,YAAYtD,SACrB,kBAMPL,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACM,WAAS,EAACF,eAAe,SAAQL,UACrCY,EAAAA,EAAAA,MAAC2C,EAAAA,EAAK,CAACzD,GAAI,CAAEsD,GAAI,OAAQrD,UAAW,UAAWC,SAAA,EAC7CY,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACpC,GAAI,CAAEiD,SAAU,SAAUX,GAAI,QAASpC,SAAA,CAAC,mBACjC,KACjBL,EAAAA,EAAAA,KAACtB,EAAQ,CAACmF,GAAG,mBAAkBxD,SAAC,qBAElCY,EAAAA,EAAAA,MAACsB,EAAAA,EAAU,CAACpC,GAAI,CAAEiD,SAAU,UAAW/C,SAAA,CAAC,cAC1B,KACZL,EAAAA,EAAAA,KAACtB,EAAQ,CAACmF,GAAG,4BAA2BxD,SAAC,gCAU7D,C,2ICvKA,MAAMyD,GAAcnF,EAAAA,EAAAA,IAAOiD,EAAAA,EAAPjD,EAClB,iGA2BF,QAnBA,WACI,MAAMc,GAAQC,EAAAA,EAAAA,KACd,OACAuB,EAAAA,EAAAA,MAAC6C,EAAW,CAAAzD,SAAA,EACVL,EAAAA,EAAAA,KAAC+D,EAAAA,GAAM,CAAA1D,UACLL,EAAAA,EAAAA,KAAA,SAAAK,SAAO,yDAETY,EAAAA,EAAAA,MAAChB,EAAAA,EAAS,CAACC,SAAS,KAAIG,SAAA,EACtBL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAG,CAACC,QAAQ,OAAOnB,eAAe,SAASU,GAAI,EAAGT,WAAW,SAAQN,UACpEL,EAAAA,EAAAA,KAACgE,EAAAA,EAAI,OAEPhE,EAAAA,EAAAA,KAACiE,EAAAA,EAAI,CAAC9D,GAAI,CAAE+D,EAAG,GAAIzB,GAAI,GAAIvB,UAAW,OAAQI,gBAAiB7B,EAAM8B,QAAQC,WAAW2C,QAASC,GAAI,OAAQ/D,UAC3GL,EAAAA,EAAAA,KAACqE,EAAAA,EAAS,WAKpB,C,mJChCO,SAASC,EAAkCC,GAChD,OAAOC,EAAAA,EAAAA,GAAqB,sBAAuBD,EACrD,CACA,MACA,GADgCE,E,QAAAA,GAAuB,sBAAuB,CAAC,OAAQ,sBAAuB,oBAAqB,uBAAwB,WAAY,QAAS,U,uBCFhL,MAAMC,EAAY,CAAC,UAAW,YAAa,kBAAmB,UAAW,WAAY,oBAAqB,WAAY,QAAS,iBAAkB,OAAQ,WAAY,SA8BxJC,GAAuBhG,EAAAA,EAAAA,IAAO,QAAS,CAClDkE,KAAM,sBACN0B,KAAM,OACNK,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,EACJ,MAAO,CAAC,CACN,CAAC,MAADG,OAAOC,EAAwBnC,QAAUgC,EAAOhC,OAC/CgC,EAAOI,KAAMJ,EAAO,iBAADE,QAAkBG,EAAAA,EAAAA,GAAWJ,EAAWK,kBAAmB,GATjDzG,EAWjC0G,IAAA,IAAC,MACF5F,EAAK,WACLsF,GACDM,EAAA,OAAKC,EAAAA,EAAAA,GAAS,CACbzD,QAAS,cACTlB,WAAY,SACZ4E,OAAQ,UAERC,cAAe,SACfC,wBAAyB,cACzBC,YAAa,GACbC,YAAa,GAEb,CAAC,KAADX,OAAMC,EAAwBW,WAAa,CACzCL,OAAQ,YAEqB,UAA9BR,EAAWK,gBAA8B,CAC1CtD,cAAe,cACf4D,WAAY,GAEZC,aAAc,IACiB,QAA9BZ,EAAWK,gBAA4B,CACxCtD,cAAe,iBACf4D,WAAY,IACmB,WAA9BX,EAAWK,gBAA+B,CAC3CtD,cAAe,SACf4D,WAAY,IACX,CACD,CAAC,MAADV,OAAOC,EAAwBnC,QAAU,CACvC,CAAC,KAADkC,OAAMC,EAAwBW,WAAa,CACzCtC,OAAQ7D,EAAMoG,MAAQpG,GAAO8B,QAAQuE,KAAKF,YAG9C,IA+JF,EAzJsCG,EAAAA,YAAiB,SAA0BC,EAASC,GACxF,MAAMpB,GAAQqB,EAAAA,EAAAA,GAAc,CAC1BrB,MAAOmB,EACPnD,KAAM,yBAGF,UACJsD,EAAS,gBACTC,EAAkB,CAAC,EAAC,QACpBpD,EACA4C,SAAUS,EAAY,kBACtBC,EACAxD,MAAOyD,EAAS,eAChBnB,EAAiB,OACfP,EACE2B,GAAQC,EAAAA,EAAAA,GAA8B5B,EAAOH,GAE7CgC,GAAiBC,EAAAA,EAAAA,KACvB,IAAIf,EAAWS,EAES,qBAAbT,GAA8D,qBAA3B5C,EAAQ6B,MAAMe,WAC1DA,EAAW5C,EAAQ6B,MAAMe,UAGH,qBAAbA,GAA4Bc,IACrCd,EAAWc,EAAed,UAG5B,MAAMgB,EAAe,CACnBhB,YAEF,CAAC,UAAW,OAAQ,WAAY,QAAS,YAAYiB,SAAQC,IACzB,qBAAvB9D,EAAQ6B,MAAMiC,IAA8C,qBAAfjC,EAAMiC,KAC5DF,EAAaE,GAAOjC,EAAMiC,GAC5B,IAEF,MAAMC,GAAMC,EAAAA,EAAAA,GAAiB,CAC3BnC,QACA6B,iBACAO,OAAQ,CAAC,WAGLlC,GAAaO,EAAAA,EAAAA,GAAS,CAAC,EAAGT,EAAO,CACrCe,WACAR,iBACA8B,MAAOH,EAAIG,QAGPC,EAhHkBpC,KACxB,MAAM,QACJoC,EAAO,SACPvB,EAAQ,eACRR,EAAc,MACd8B,GACEnC,EACEqC,EAAQ,CACZlC,KAAM,CAAC,OAAQU,GAAY,WAAY,iBAAFZ,QAAmBG,EAAAA,EAAAA,GAAWC,IAAmB8B,GAAS,SAC/FpE,MAAO,CAAC,QAAS8C,GAAY,aAE/B,OAAOyB,EAAAA,EAAAA,GAAeD,EAAO9C,EAAmC6C,EAAQ,EAqGxDG,CAAkBvC,GAClC,IAAIjC,EAAQyD,EAWZ,OATa,MAATzD,GAAiBA,EAAMF,OAASL,EAAAA,GAAe+D,IACjDxD,GAAqB9C,EAAAA,EAAAA,KAAKuC,EAAAA,GAAY+C,EAAAA,EAAAA,GAAS,CAC7CvD,UAAW,OACXoE,UAAWgB,EAAQrE,OAClBsD,EAAgBmB,WAAY,CAC7BlH,SAAUyC,OAIM7B,EAAAA,EAAAA,MAAM0D,GAAsBW,EAAAA,EAAAA,GAAS,CACvDa,WAAWqB,EAAAA,EAAAA,GAAKL,EAAQjC,KAAMiB,GAC9BpB,WAAYA,EACZkB,IAAKA,GACJO,EAAO,CACRnG,SAAU,CAAc0F,EAAAA,aAAmB/C,EAAS4D,GAAe9D,KAEvE,G","sources":["content/auth/login/form/index.tsx","content/auth/login/index.tsx","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import {Box, Button, Checkbox, Container, FormControlLabel, Grid, Stack, Typography} from '@mui/material';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {styled, useTheme} from '@mui/material/styles';\r\nimport {FormProvider, SubmitHandler, useForm} from \"react-hook-form\";\r\nimport FormInput from \"../../../../components/FormInput\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport {literal, object, string, TypeOf} from \"zod\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n// ðŸ‘‡ Styled React Route Dom Link Component\r\nexport const LinkItem = styled(Link)`\r\n  text-decoration: none;\r\n  color: #3683dc;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: #5ea1b6;\r\n  }\r\n`;\r\n\r\n// ðŸ‘‡ Login Schema with Zod\r\nconst loginSchema = object({\r\n  email: string().min(1, 'Email is required').email('Email is invalid'),\r\n  password: string()\r\n      .min(1, 'Password is required')\r\n      .min(8, 'Password must be more than 8 characters')\r\n      .max(32, 'Password must be less than 32 characters'),\r\n  persistUser: literal(true).optional(),\r\n});\r\n\r\n// ðŸ‘‡ Infer the Schema to get the TS Type\r\ntype ILogin = TypeOf<typeof loginSchema>;\r\n\r\nfunction LoginForm() {\r\n  const theme = useTheme();\r\n  // ðŸ‘‡ Default Values\r\n  const defaultValues: ILogin = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  // ðŸ‘‡ The object returned from useForm Hook\r\n  const methods = useForm<ILogin>({\r\n    resolver: zodResolver(loginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  // ðŸ‘‡ Submit Handler\r\n  const onSubmitHandler: SubmitHandler<ILogin> = (values: ILogin) => {\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ textAlign: 'center'}}>\r\n      <Grid\r\n        spacing={{ xs: 6, md: 10 }}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item md={10} lg={8} mx=\"auto\">\r\n          <FormProvider {...methods}>\r\n            <Grid\r\n                container\r\n                sx={{\r\n                  boxShadow: { sm: '0 0 5px #ddd' },\r\n                  py: '6rem',\r\n                  px: '1rem',\r\n                  backgroundColor: theme.palette.background.paper\r\n                }}\r\n            >\r\n              <Grid\r\n                  item\r\n                  container\r\n                  justifyContent='center'\r\n                  rowSpacing={5}\r\n                  sx={{\r\n                    maxWidth: { sm: '45rem' },\r\n                    marginInline: 'auto',\r\n                  }}\r\n              >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                >\r\n                  <Box\r\n                      display='flex'\r\n                      flexDirection='column'\r\n                      component='form'\r\n                      noValidate\r\n                      autoComplete='off'\r\n                      onSubmit={methods.handleSubmit(onSubmitHandler)}\r\n                  >\r\n                    <Typography\r\n                        variant='h6'\r\n                        component='h1'\r\n                        sx={{ textAlign: 'center', mb: '1.5rem' }}\r\n                    >\r\n                      Log into your account\r\n                    </Typography>\r\n                      <TextField\r\n                          required\r\n                          type='email'\r\n                          name='email'\r\n                          label='Email'\r\n                          variant=\"filled\"\r\n                          sx={{mb: '1rem'}}\r\n                      />\r\n                      <TextField\r\n                          label=\"Password\"\r\n                          type=\"password\"\r\n                          variant=\"filled\"\r\n                      />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                              size='small'\r\n                              aria-label='trust this device checkbox'\r\n                              required\r\n                              {...methods.register('persistUser')}\r\n                          />\r\n                        }\r\n                        label={\r\n                          <Typography\r\n                              variant='body2'\r\n                              sx={{\r\n                                fontSize: '0.8rem',\r\n                                fontWeight: 400,\r\n                                color: '#5e5b5d',\r\n                              }}\r\n                          >\r\n                            Trust this device\r\n                          </Typography>\r\n                        }\r\n                    />\r\n\r\n                    <LoadingButton\r\n                        loading={false}\r\n                        type='submit'\r\n                        variant='contained'\r\n                        sx={{\r\n                          py: '0.8rem',\r\n                          mt: 2,\r\n                          width: '80%',\r\n                          marginInline: 'auto',\r\n                        }}\r\n                        href={'dashboard'}\r\n                    >\r\n                      Login\r\n                    </LoadingButton>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justifyContent='center'>\r\n                <Stack sx={{ mt: '3rem', textAlign: 'center' }}>\r\n                  <Typography sx={{ fontSize: '0.9rem', mb: '1rem' }}>\r\n                    Need an account?{' '}\r\n                    <LinkItem to='/Dispatch/signup'>Sign up here</LinkItem>\r\n                  </Typography>\r\n                  <Typography sx={{ fontSize: '0.9rem' }}>\r\n                    Forgot your{' '}\r\n                    <LinkItem to='/Dispatch/forgot-password'>password?</LinkItem>\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </FormProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import { Box, Container, Card } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport {styled, useTheme} from '@mui/material/styles';\r\nimport Logo from 'src/components/LogoSign';\r\nimport LoginForm from './form';\r\n\r\nconst AuthWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n);\r\n\r\nfunction Login() {\r\n    const theme = useTheme();\r\n    return (\r\n    <AuthWrapper>\r\n      <Helmet>\r\n        <title>Tokyo Free Black React Typescript Admin Dashboard</title>\r\n      </Helmet>\r\n      <Container maxWidth=\"lg\">\r\n        <Box display=\"flex\" justifyContent=\"center\" py={5} alignItems=\"center\">\r\n          <Logo />\r\n        </Box>\r\n        <Card sx={{ p: 10, mb: 10, boxShadow: 'none', backgroundColor: theme.palette.background.default, pt: '5px' }}>\r\n          <LoginForm />\r\n        </Card>\r\n      </Container>\r\n    </AuthWrapper>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["LinkItem","styled","Link","_templateObject","_taggedTemplateLiteral","loginSchema","object","email","string","min","password","max","persistUser","literal","optional","theme","useTheme","methods","useForm","resolver","zodResolver","defaultValues","_jsx","Container","maxWidth","sx","textAlign","children","Grid","spacing","xs","md","justifyContent","alignItems","container","item","lg","mx","FormProvider","_jsxs","boxShadow","sm","py","px","backgroundColor","palette","background","paper","rowSpacing","marginInline","Box","display","flexDirection","component","noValidate","autoComplete","onSubmit","handleSubmit","values","console","log","Typography","variant","mb","TextField","required","type","name","label","FormControlLabel","control","Checkbox","size","register","fontSize","fontWeight","color","LoadingButton","loading","mt","width","href","Stack","to","AuthWrapper","Helmet","Logo","Card","p","default","pt","LoginForm","getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","overridesResolver","props","styles","ownerState","concat","formControlLabelClasses","root","capitalize","labelPlacement","_ref","_extends","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","disabled","vars","text","React","inProps","ref","useThemeProps","className","componentsProps","disabledProp","disableTypography","labelProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","states","error","classes","slots","composeClasses","useUtilityClasses","typography","clsx"],"sourceRoot":""}