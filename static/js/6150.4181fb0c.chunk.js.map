{"version":3,"file":"static/js/6150.4181fb0c.chunk.js","mappings":"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","sources":["content/auth/forgotpassword/form/index.tsx","content/auth/forgotpassword/index.tsx","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["import {Box, Button, Checkbox, Container, FormControlLabel, Grid, Stack, Typography} from '@mui/material';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {styled, useTheme} from '@mui/material/styles';\r\nimport {FormProvider, SubmitHandler, useForm} from \"react-hook-form\";\r\nimport FormInput from \"../../../../components/FormInput\";\r\nimport LoadingButton from \"@mui/lab/LoadingButton\";\r\nimport {zodResolver} from \"@hookform/resolvers/zod\";\r\nimport {literal, object, string, TypeOf} from \"zod\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\n// ðŸ‘‡ Styled React Route Dom Link Component\r\nexport const LinkItem = styled(Link)`\r\n  text-decoration: none;\r\n  color: #3683dc;\r\n  &:hover {\r\n    text-decoration: underline;\r\n    color: #5ea1b6;\r\n  }\r\n`;\r\n\r\n// ðŸ‘‡ Login Schema with Zod\r\nconst loginSchema = object({\r\n  email: string().min(1, 'Email is required').email('Email is invalid'),\r\n  password: string()\r\n      .min(1, 'Password is required')\r\n      .min(8, 'Password must be more than 8 characters')\r\n      .max(32, 'Password must be less than 32 characters'),\r\n  persistUser: literal(true).optional(),\r\n});\r\n\r\n// ðŸ‘‡ Infer the Schema to get the TS Type\r\ntype ILogin = TypeOf<typeof loginSchema>;\r\n\r\nfunction ForgotPasswordForm() {\r\n  const theme = useTheme();\r\n  // ðŸ‘‡ Default Values\r\n  const defaultValues: ILogin = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  // ðŸ‘‡ The object returned from useForm Hook\r\n  const methods = useForm<ILogin>({\r\n    resolver: zodResolver(loginSchema),\r\n    defaultValues,\r\n  });\r\n\r\n  // ðŸ‘‡ Submit Handler\r\n  const onSubmitHandler: SubmitHandler<ILogin> = (values: ILogin) => {\r\n    console.log(values);\r\n  };\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ textAlign: 'center'}}>\r\n      <Grid\r\n        spacing={{ xs: 6, md: 10 }}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        container\r\n      >\r\n        <Grid item md={10} lg={8} mx=\"auto\">\r\n          <FormProvider {...methods}>\r\n            <Grid\r\n                container\r\n                sx={{\r\n                  boxShadow: { sm: '0 0 5px #ddd' },\r\n                  py: '6rem',\r\n                  px: '1rem',\r\n                  backgroundColor: theme.palette.background.paper\r\n                }}\r\n            >\r\n              <Grid\r\n                  item\r\n                  container\r\n                  justifyContent='center'\r\n                  rowSpacing={5}\r\n                  sx={{\r\n                    maxWidth: { sm: '45rem' },\r\n                    marginInline: 'auto',\r\n                  }}\r\n              >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={6}\r\n                >\r\n                  <Box\r\n                      display='flex'\r\n                      flexDirection='column'\r\n                      component='form'\r\n                      noValidate\r\n                      autoComplete='off'\r\n                      onSubmit={methods.handleSubmit(onSubmitHandler)}\r\n                  >\r\n                    <Typography\r\n                        variant='h6'\r\n                        component='h1'\r\n                        sx={{ textAlign: 'center', mb: '1.5rem' }}\r\n                    >\r\n                      Send Password Reset Email\r\n                    </Typography>\r\n                      <TextField\r\n                          required\r\n                          type='email'\r\n                          name='email'\r\n                          label='Email'\r\n                          variant=\"filled\"\r\n                          sx={{mb: '1rem'}}\r\n                      />\r\n                    <LoadingButton\r\n                        loading={false}\r\n                        type='submit'\r\n                        variant='contained'\r\n                        sx={{\r\n                          py: '0.8rem',\r\n                          mt: 2,\r\n                          width: '80%',\r\n                          marginInline: 'auto',\r\n                        }}\r\n                        href={'#'}\r\n                    >\r\n                      Send Email\r\n                    </LoadingButton>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container justifyContent='center'>\r\n                <Stack sx={{ mt: '3rem', textAlign: 'center' }}>\r\n                  <Typography sx={{ fontSize: '0.9rem', mb: '1rem' }}>\r\n                    Need an account?{' '}\r\n                    <LinkItem to='/Dispatch/signup'>Sign up here</LinkItem>\r\n                  </Typography>\r\n                  <Typography sx={{ fontSize: '0.9rem' }}>\r\n                    Remembered it? Go to{' '}\r\n                    <LinkItem to='/Dispatch/login'>login?</LinkItem>\r\n                  </Typography>\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n          </FormProvider>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default ForgotPasswordForm;\r\n","import { Box, Container, Card } from '@mui/material';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nimport {styled, useTheme} from '@mui/material/styles';\r\nimport Logo from 'src/components/LogoSign';\r\nimport ForgotPasswordForm from './form';\r\n\r\nconst AuthWrapper = styled(Box)(\r\n  () => `\r\n    overflow: auto;\r\n    flex: 1;\r\n    overflow-x: hidden;\r\n    align-items: center;\r\n`\r\n);\r\n\r\nfunction ForgotPassword() {\r\n    const theme = useTheme();\r\n    return (\r\n    <AuthWrapper>\r\n      <Helmet>\r\n        <title>Forgot password</title>\r\n      </Helmet>\r\n      <Container maxWidth=\"lg\">\r\n        <Box display=\"flex\" justifyContent=\"center\" py={5} alignItems=\"center\">\r\n          <Logo />\r\n        </Box>\r\n        <Card sx={{ p: 10, mb: 10, boxShadow: 'none', backgroundColor: theme.palette.background.default, pt: '5px' }}>\r\n          <ForgotPasswordForm />\r\n        </Card>\r\n      </Container>\r\n    </AuthWrapper>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\n\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n\n  const {\n    className,\n    raised = false\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    raised\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["LinkItem","styled","Link","_templateObject","_taggedTemplateLiteral","loginSchema","object","email","string","min","password","max","persistUser","literal","optional","theme","useTheme","methods","useForm","resolver","zodResolver","defaultValues","_jsx","Container","maxWidth","sx","textAlign","children","Grid","spacing","xs","md","justifyContent","alignItems","container","item","lg","mx","FormProvider","_jsxs","boxShadow","sm","py","px","backgroundColor","palette","background","paper","rowSpacing","marginInline","Box","display","flexDirection","component","noValidate","autoComplete","onSubmit","handleSubmit","values","console","log","Typography","variant","mb","TextField","required","type","name","label","LoadingButton","loading","mt","width","href","Stack","fontSize","to","AuthWrapper","Helmet","Logo","Card","p","default","pt","ForgotPasswordForm","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","Paper","overridesResolver","props","styles","root","overflow","React","inProps","ref","useThemeProps","className","raised","other","_objectWithoutPropertiesLoose","ownerState","_extends","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined"],"sourceRoot":""}